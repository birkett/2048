@import 'constants';

// Exponent.
// From: https://github.com/Team-Sass/Sassy-math/blob/master/sass/math.scss#L36
@function exponent($base, $exponent) {
    $value: $base;

    @if $exponent > 1 {
        @for $i from 2 through $exponent {
            $value: $value * $base;
        }
    }

    @if $exponent < 1 {
        @for $i from 0 through -$exponent {
            $value: $value / $base;
        }
    }

    @return $value;
}

.tile-container {
    position: absolute;
    z-index: 2;
}

.tile {
    &,
    .tile-inner {
        width: ceil($tile-size);
        height: ceil($tile-size);
        line-height: ceil($tile-size);
    }

    .tile-inner {
        border-radius: $tile-border-radius;
        background: $tile-color;
        text-align: center;
        font-weight: bold;
        z-index: 10;
        font-size: 55px;
    }

    // Build position classes.
    @for $x from 1 through $grid-row-cells {
        @for $y from 1 through $grid-row-cells {
            &.tile-position-#{$x}-#{$y} {
                $xPos: floor(($tile-size + $grid-spacing) * ($x - 1));
                $yPos: floor(($tile-size + $grid-spacing) * ($y - 1));
                transform: translate($xPos, $yPos);
            }
        }
    }

    position: absolute;
    transition: $transition-speed ease-in-out;
    transition-property: transform;

    // Colors for all 17 states, false = no special color.
    $special-colors: false false,  // 2
                     false false,  // 4
                     #f78e48 true, // 8
                     #fc5e2e true, // 16
                     #ff3333 true, // 32
                     #ff0000 true, // 64
                     false true,   // 128
                     false true,   // 256
                     false true,   // 512
                     false true,   // 1024
                     false true,   // 2048
                     #48f78e true, // 4096
                     #2efc5e true, // 8192
                     #33ff33 true, // 16384
                     #00ff00 true, // 32768
                     #007a7a true, // 65536
                     #0000ff true; // 131072

    $base: 2;
    $exponent: 1;
    $limit: 11;
    $super-limit: 17;

    // Build tile colors.
    @while $exponent <= $super-limit {
        $power: exponent($base, $exponent);

        &.tile-#{$power} .tile-inner {
            // Calculate base background color.
            $gold-percent: min(100, ($exponent - 1) / ($limit - 1) * 100);
            $mixed-background: mix($tile-gold-color, $tile-color, $gold-percent);

            $nth-color: nth($special-colors, $exponent);

            $special-background: nth($nth-color, 1);
            $bright-color: nth($nth-color, 2);

            @if $special-background {
                $mixed-background: mix($special-background, $mixed-background, 55%);
            }

            @if $bright-color {
                color: $bright-text-color;
            }

            background: $mixed-background;

            // Add glow.
            $glow-opacity: min(max($exponent - 4, 0) / ($limit - 4), 1);

            box-shadow: 0 0 30px 10px rgba($tile-gold-glow-color, $glow-opacity / 1.8),
            inset 0 0 0 1px rgba(white, $glow-opacity / 3);

            // Adjust font size for bigger numbers.
            @if $power >= 100 and $power < 1000 {
                font-size: 45px;

                // Media queries placed here to avoid carrying over the rest of the logic.
                @media screen and (max-width: $mobile-threshold) {
                    font-size: 25px;
                }
            } @else if $power >= 1000 {
                font-size: 35px;

                @media screen and (max-width: $mobile-threshold) {
                    font-size: 15px;
                }
            }
        }

        $exponent: $exponent + 1;
    }
}

.tile-new .tile-inner {
    animation: appear 200ms ease $transition-speed;
    animation-fill-mode: backwards;

    @media screen and (max-width: $mobile-threshold) {
        font-size: 35px;
    }
}

.tile-merged .tile-inner {
    z-index: 20;
    animation: pop 200ms ease $transition-speed;
    animation-fill-mode: backwards;
}
